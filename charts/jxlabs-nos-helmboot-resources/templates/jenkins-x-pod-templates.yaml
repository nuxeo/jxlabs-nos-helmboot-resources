{{- if .Values.podTemplates.enabled }}
{{- $requirements := .Values.jxRequirements }}
{{- $agent := .Values.podTemplates.agent -}}
{{- $globalenv := .Values.podTemplates.globalenvVars -}}
{{- range $pkey, $pval := .Values.podTemplates.templates }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-{{ $pval.name }}"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: {{ $pval.label }}
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: {{ $pval.devPodPorts }}
      {{- if $pval.annotations }}
      {{- range $key, $value := $pval.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
{{- if $pval.serviceAccount }}
      serviceAccount: {{ $pval.serviceAccount }}
{{- end }}
      nodeSelector:
{{- range $key, $value := $pval.nodeSelector }}
        {{- $key }}: {{ $value }}
{{- end }}
{{- if $pval.tolerations }}
      tolerations:
{{ toYaml $pval.tolerations | indent 6 }}
{{- end }}
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: kaniko-secret
        secret:
          secretName: kaniko-secret
          items:
          - key: kaniko-secret
            path: kaniko/kaniko-secret.json
{{- if $agent.dockerConfig }}
      - name: jenkins-docker-cfg
        secret:
          secretName: jenkins-docker-cfg
{{- end }}
{{- if $agent.dockerHostPath }}
      - name: docker-daemon
        hostPath:
          path: {{ $agent.dockerHostPath }}
{{- end }}
{{- range $index, $volume := $pval.volumes }}
      - name: volume-{{ $index }}
  {{- if eq "Secret" $volume.type }}
        secret:
          secretName: {{ $volume.secretName }}
  {{- end }}
  {{- if eq "HostPath" $volume.type }}
        hostPath:
          path: {{ $volume.hostPath }}
  {{- end }}
  {{- if eq "PersistentVolumeClaim" $volume.type }}
        claimName:
          path: {{ $volume.claimName }}
        readOnly
          readOnly: {{ default false $volume.readOnly }}
  {{- end }}
{{- end }}
      containers:
  {{- range $ckey, $cval := $pval.containers }}
  {{- if ne "Jnlp" $ckey }}
      - name: {{ $ckey | lower }}
        image: {{ $cval.image }}
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: {{ default false $cval.privileged }}
  {{- if $cval.alwaysPullImage }}
        imagePullPolicy: Always
  {{- end }}
        tty: {{ default false $cval.tty }}
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_REGISTRY_ORG
          value: {{ $requirements.cluster.environmentGitOwner }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secrets/kaniko/kaniko-secret.json
        - name: GITHUB_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
            name: knative-git-user-pass
            key: password
  {{- if $globalenv.TILLER_NAMESPACE }}
        - name: TILLER_NAMESPACE
          value: {{ $globalenv.TILLER_NAMESPACE }}
  {{- end }}
  {{- range $ekey, $eval := $pval.envVars }}
        - name: {{ $ekey }}
          value: {{ $eval }}
  {{- end }}
        resources:
          requests:
            cpu: {{ $cval.requestCpu }}
            memory: {{ $cval.requestMemory }}
          limits:
  {{- if $pval.limitCpu }}
            cpu: {{ $cval.limitCpu }}
  {{- end }}
  {{- if $pval.limitMemory }}
            memory: {{ $cval.limitMemory }}
  {{- end }}
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - mountPath: /secrets/kaniko/kaniko-secret.json
            name: kaniko-secret
  {{- if $agent.dockerConfig }}
          - name: jenkins-docker-cfg
            mountPath: /home/jenkins/.docker
  {{- end }}
  {{- if $agent.dockerHostPath }}
          - name: docker-daemon
            mountPath: {{ $agent.dockerMountPath }}
  {{- end }}
  {{- range $index, $volume := $pval.volumes }}
          - name: volume-{{ $index }}
            mountPath: {{ $volume.mountPath }}
  {{- end }}
  {{- end }}
{{- end }}
{{- if $pval.imagePullSecret }}
      imagePullSecrets:
        - name: {{ $pval.imagePullSecret }}
{{- end }}
{{- end }}
{{- end -}}
